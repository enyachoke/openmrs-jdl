/**
 * Generated by JHipster IDE plugin
 * 
 */
entity Allergen{
	nonCodedAllergen String
	allergenType AllergenType
	uuid String required
}

enum AllergenType {
	DRUG,
	FOOD,
	ENVIRONMENT,
	OTHER
}

enum AllergySeverity {
	UNKNOWN,
	INTOLERANCE,
	MILD,
	MODERATE,
	SEVERE
}

entity AllergyReaction{
	reactionNonCoded String
	uuid String
}

entity Allergy {
	uuid String required
	comment String 
}

entity CareSetting {
	uuid String required
	careSettingType CareSettingType required
	description String
	name String required
}

enum CareSettingType {
		OUTPATIENT,
		INPATIENT
}

entity Concept{
	uuid String required
	formText String 
	description String 
	shortName String 
	version String 
}

entity Cohort{
	uuid String required
	description String 
	name String	required
}

entity CohortMembership{
	uuid String required
	endDate LocalDate 
	startDate LocalDate	required
}

entity Concept{
	uuid String required
	formText String 
	description String 
	shortName String 
	version String 
	isSet Boolean required
}

entity ConceptAnswer{
	uuid String required
	sortWeight Double  
}
entity ConceptAttribute{
	uuid String required
	valueReference String  required
}
entity ConceptAttributeType{
	uuid String required
	datatype String
	datatypeConfig String
	description String
	handlerConfig String
	name String required
	preferredHandler String
	maxOccurs Long
	minOccurs Long required
}
entity ConceptClass{
	uuid String required
	description String
	name String required
}
entity ConceptComplex{
	uuid String required
	handler String
}
entity ConceptDatatype{
	uuid String required
	description String
	hl7Abbreviation String
	name String required
}
entity ConceptDescription{
	uuid String required
	name String
	description String required
}
entity ConceptMapType{
	uuid String required
	name String required
	description String
	isHidden Boolean
}
entity ConceptName{
	uuid String required
	conceptNameType String
	name String required
	locale String required
	localePreferred Boolean
}
entity ConceptNameTag{
	tag String required
	description String
	locale String
	localePreferred Boolean
	uuid String required
}

entity ConceptNumeric{
	uuid String required
	displayPrecision Long
	hiAbsolute Double
	hiCritical Double
	hiNormal Double
	lowAbsolute Double
	lowCritical Double
	lowNormal Double
	units String
	allowDecimal Boolean required
}
entity ConceptProposal{
	uuid String required
	finalText String
	comments String
	locale String
	originalText String required
	state String required
}
entity ConceptMap{
	uuid String required
}
entity ConceptSource{
	uuid String required
	description String required
	hl7Code String
	name String required
	uniqueId String
}
entity ConceptReferenceTerm{
	uuid String required
	description String
	version String
	name String
}
entity ConceptReferenceTermMap {
	uuid String required
}
entity ConceptSet {
	uuid String required
	sortWeight Double
}
entity ConceptStateConversion {
	uuid String required
}
entity ConceptStopWord {
	uuid String required
	locale String
	value String required
}
entity Drug{
	combination Boolean required
	maximumDailyDose Double
	minimumDailyDose Double
	name String
	strength String
	uuid String required
}
entity DrugIngredient{
	strength Double
	uuid String required
}
entity DrugOrder{
	asNeeded Boolean required
	asNeededCondition String
	brandName String
	dispenseAsWritten Boolean required
	dose Double
	dosingInstructions String
	dosingType String
	drugNonCoded String
	duration Long
	numRefills Long
	quantity Double
	uuid String required
}
entity DrugReferenceMap{
	uuid String required
}
entity Encounter{
	encounterDatetime LocalDate required
	uuid String required
}
entity EncounterRole {
	name String required
	description String
	uuid String required
}
entity EncounterProvider {
	uuid String required
}
entity EncounterType {
	name String required
	description String
	uuid String required
}
entity Field {
	defaultValue String
	description String
	name String required
	selectMultiple Boolean required
	tableName String
	uuid String required
}

entity FieldAnswer{
	uuid String required
}
entity FieldType {
	description String
	isSet Boolean
	name String
	uuid String required
}
entity Form {
	build Long
	description String
	name String required
	version String required
	published Boolean required
	template String
	uuid String required
}
entity FormField {
	fieldNumber String
	fieldPart String
	maxOccurs Long
	minOccurs Long
	pageNumber Long
	is_required Boolean
	sortWeight Float
	uuid String required
}

entity FormResource {
	datatype String
	datatypeConfig String
	handlerConfig String
	preferredHandler String
	valueReference String required
	name String required
	uuid String required
}
entity Hl7InArchive {
	hl7Data String required
	hl7Source String required
	hl7SourceKey String
	messageState Long
	uuid String required
}
entity Hl7InError {
	error String required
	errorDetails String
	hl7Data String required
	hl7Source String required
	hl7SourceKey String
	uuid String required
}
entity Hl7InQueue {
	errorMsg String
	hl7Data String required
	hl7SourceKey String
	messageState Long
	uuid String required
}
entity Hl7Source {
	description String
	name String required
	uuid String required
}
entity Location{
	cityVillage String
	country String
	countyDistrict String
	description String
	latitude String
	longitude String
	name String required
	postalCode String
	stateProvince String
	uuid String required
}
entity LocationAttribute {
	valueReference String required
	uuid String required
}
entity LocationAttributeType {
	datatype String
	description String
	name String required
	handlerConfig String
	preferredHandler String
	maxOccurs Long required
	minOccurs Long
	uuid String required
} 
entity LocationTag {
	description String
	name String
	uuid String required
}
entity Note {
	noteType String
	priority Long
	text String required
	uuid String required
}
entity Obs{
	accessionNumber String
	comments String
	formNamespaceAndPath String
	interpretation String
	obsDatetime LocalDate required
	status String required
	valueComplex String
	valueDatetime LocalDate
	valueGroupId Long
	valueModifier String
	valueNumeric Double
	valueText String
	uuid String required
}
entity Orders {
	accessionNumber String
	autoExpireDate LocalDate
	commentToFulfiller String
	dateActivated String
	dateStopped String
	instructions String
	orderAction String
	orderNumber String required
	orderReasonNonCoded String
	scheduledDate LocalDate
	sortWeight Double
	urgency Urgency required
	action Action required
	uuid String required
}

enum Urgency {
		ROUTINE,
		STAT,
		ON_SCHEDULED_DATE
	}
	

	enum Action {
		NEW,
		REVISE,
		DISCONTINUE,
		RENEW
	}
 
entity OrderFrequency {
	frequencyPerDay Double
	uuid String required
}
entity OrderGroup {
	uuid String required
}
entity OrderSet {
	description String
	name String
	operator Operator required
	uuid String required
}
enum Operator {
		ALL, ONE, ANY
}
entity OrderSetMember {
	orderTemplate String
	orderTemplateType String
	sequenceNumber String required
	uuid String required
}
entity OrderType {
	description String
	javaClassName String
	name String required
	uuid String required
}
entity Patient {
	allergyStatus String
	uuid String required
}
entity PatientIdentifier{
	uuid String required
	identifier String required
	preferred Boolean required
}
entity PatientIdentifierType {
	checkDigit Boolean required
	description String
	format String
	formatDescription String
	locationBehavior String
	name String required
	isRequired String
	uniquenessBehavior String
	validator String
	uuid String required
}
entity PatientProgram {
	dateCompleted LocalDate
	dateEnrolled LocalDate
	uuid String required
}
entity PatientState {
	endDate LocalDate
	startDate LocalDate
	uuid String required
}
entity Person{
	birthdate LocalDate
	birthdateEstimated Boolean required
	birthtime LocalDate
	dead Boolean required
	deathDate LocalDate
	deathdateEstimated Boolean
	gender String
	uuid String required
}
entity PersonAddress{
	cityVillage String
	country String
	countyDistrict String
	description String
	latitude String
	longitude String
	postalCode String
	stateProvince String
	preferred Boolean required
	startDate LocalDate
	address String
	uuid String required
}
entity PersonAttribute {
	value String required
	uuid String required
}
entity PersonAttributeType{
	description String
	format String
	name String required
	searchable Boolean required
	sortWeight Double
	uuid String required
}
entity PersonMergeLog {
	mergedData String required
	uuid String required
}
entity PersonName {
	degree String
	familyName String
	familyNamePrefix String
	familyNameSuffix String
	familyName2 String
	givenName String
	middleName String
	prefix String
	preferred Boolean required
	uuid String required
}
entity Privilege {
	privilege String required
	description String
	uuid String required
}
entity Program{
	description String
	name String
	uuid String required
}
entity ProgramWorkflow{
	uuid String required
}
entity ProgramWorkflowState{
	initial Boolean required
	terminal Boolean required
	uuid String required
}
entity Provider {
	identifier String
	name String
	uuid String required
}
entity ProviderAttribute {
	valueReference String required
	uuid String required
}
entity ProviderAttributeType {
	datatype String
	description String
	name String required
	handlerConfig String
	preferredHandler String
	maxOccurs Long
	minOccurs Long required
	uuid String required
}
entity Relationship {
	startDate LocalDate
	endDate LocalDate
	uuid String required
}
entity RelationshipType {
	aIsToB String required
	bIsToA String required
	description String 
	preferred Boolean required
	weight Long required
	uuid String required
}
entity Role {
	role String required
	description String
	uuid String required
}
entity User {}
entity TestOrder {
	clinicalHistory String
	laterality String
	numberOfRepeats Long
	uuid String required	
}
entity Visit{
	uuid String required
	dateStarted LocalDate required
	dateStopped LocalDate
}

entity VisitAttribute {
	valueReference String required
	uuid String required
}
entity VisitAttributeType {
	datatype String
	description String
	name String required
	handlerConfig String
	preferredHandler String
	maxOccurs Long
	minOccurs Long required
	uuid String required
}

entity VisitType {
	description String
	name String required
	uuid String required
}

relationship OneToOne {
  ConceptComplex{concept required}  to Concept{conceptComplex},
  ConceptNumeric{concept}  to Concept{conceptNumeric},
  DrugOrder{order} to Orders{drugOrder},
  Patient{person} to Person{patient},
  TestOrder {order} to Orders {testOrder}
}
relationship ManyToOne {
	Allergen {codedAllergen} to Concept,
	
	
	Allergy {patient required} to Patient,
	Allergy {severity} to  Concept,
	Allergy {allergen required}  to Allergen ,
	
	AllergyReaction {allergy required} to Allergy,
	AllergyReaction {reaction required} to Concept,
	
	CohortMembership {patient required} to Patient,
			
	Concept {conceptClass required} to ConceptClass,
	Concept {conceptDatatype required} to ConceptDatatype,
	
	
	ConceptAnswer {answerDrug} to Drug,
	ConceptAnswer {concept required} to Concept,
	ConceptAnswer {answerConcept} to Concept,
	
	ConceptAttribute {concept required} to Concept,
	ConceptAttribute {conceptAttributeType required} to ConceptAttributeType,
	
	ConceptDescription {concept required} to Concept,
	
	ConceptName {concept} to Concept,
		
	ConceptProposal {mappedConcept} to Concept,
	ConceptProposal {obsConcept} to Concept,
	ConceptProposal {encounter} to Encounter,
	ConceptProposal {obs} to Obs,
	
	ConceptMap {concept required} to Concept,
	ConceptMap {conceptMapType required} to ConceptMapType,
	ConceptMap {conceptReferenceTerm required} to ConceptReferenceTerm,
	
	ConceptReferenceTerm {conceptSource required} to ConceptSource,
	
	ConceptReferenceTermMap {conceptMapType required} to ConceptMapType,
	ConceptReferenceTermMap {termA required} to ConceptReferenceTerm,
	ConceptReferenceTermMap {termB required} to ConceptReferenceTerm,
	
	ConceptSet {conceptSet required} to ConceptSet,
	ConceptSet {concept required} to Concept,
	
	ConceptStateConversion {programWorkflow} to ProgramWorkflow,
	ConceptStateConversion {programWorkflowState} to ProgramWorkflowState,
	ConceptStateConversion {concept} to Concept,
	
	Drug {dosageForm} to Concept,
	Drug {concept required} to Concept,
	
	DrugIngredient {units} to Concept,
	DrugIngredient {ingredient required} to Concept,
	DrugIngredient {drug} to Drug,
	
	DrugOrder {doseUnits} to Concept,
	DrugOrder {durationUnits} to Concept,
	DrugOrder {quantityUnits} to Concept,
	DrugOrder {route} to Concept,
	DrugOrder {orderFrequency} to OrderFrequency,
	DrugOrder {drug} to Drug,
	
	DrugReferenceMap {conceptMapType required} to ConceptMapType,
	DrugReferenceMap {conceptReferenceTerm required} to ConceptReferenceTerm,
	DrugReferenceMap {drug required} to Drug,
	
	Encounter {form} to Form,
	Encounter {location} to Location,
	Encounter {patient required} to Patient,
	Encounter {encounterType required} to EncounterType,
	
	EncounterProvider {encounterRole required} to EncounterRole,
	EncounterProvider {provider required} to Provider,
	
	Field {concept} to Concept,
	Field {fieldType} to FieldType,
	
	FieldAnswer {field required} to Field,
	FieldAnswer {concept required} to Concept,
	
	FormField {field required} to Field,
	FormField {parent } to Field,
	
	
			
	Hl7InQueue {hl7Source} to Hl7Source,
	
	LocationAttribute {location required} to Location,	
	LocationAttribute {locationAttributeType required} to LocationAttributeType,
	
	Note {obs} to Obs,
	Note {patient} to Patient,
	
	Obs {note} to Note,
	Obs {valueCoded} to Concept,
	Obs {valueDrug} to Drug,
	Obs {concept required} to Concept,
	Obs {location} to Location,
	Obs {valueCodedName} to ConceptName,
	Obs {order} to Orders,
	Obs {person required} to Person,
	Obs {previousVersion} to Obs,
		
	Orders {concept required} to Concept,
	Orders {orderReason} to Concept,
	Orders {orderer required} to Provider,
	Orders {patient required} to Patient,
	Orders {careSetting required} to CareSetting,
	Orders {orderGroup} to OrderGroup,
	Orders {previousOrder} to Orders,
	Orders {orderType required} to OrderType,
	
	OrderFrequency {concept required} to Concept,
	
	OrderGroup {patient required} to Patient,
	OrderGroup {orderSet} to OrderSet,
	
	OrderSetMember {concept required} to Concept,
	OrderSetMember {orderSet required} to OrderSet,
	OrderSetMember {orderType required} to OrderType,
	
	OrderType{parent} to OrderType,
	
	PatientIdentifier {patientIdentifierType required} to PatientIdentifierType,
	PatientIdentifier {patient required} to Patient,
	PatientIdentifier {location} to Location,
	
	PatientProgram {patient required} to Patient,
	PatientProgram {location} to Location,
	PatientProgram {outcome} to Concept,
	PatientProgram {program required} to Program,
	
	PatientState {programWorkflowState} to ProgramWorkflowState,
	
	Person {causeOfDeath} to Concept,
		
	PersonAttribute {personAttributeType required} to PersonAttributeType,
	
	PersonMergeLog {loserPerson required} to Person,
	PersonMergeLog {winnerPerson required} to Person ,
		
	Program {concept required} to Concept,
	Program {outcomesConcept} to Concept,
	
	ProgramWorkflow {concept required} to Concept,
		
	ProviderAttribute {providerAttributeType required} to ProviderAttributeType,
		
	Relationship {relationshipType} to RelationshipType,
	Relationship {personA required} to Person,
	Relationship {personB required} to Person,
	
	TestOrder {orderFrequency} to OrderFrequency,
	TestOrder {specimenSource} to Concept,
		
	Visit {indicationConcept} to Concept,
	Visit {location} to Location,
	Visit {patient required} to Patient,
	Visit {visitType required} to VisitType,
	
	VisitAttribute {visitAttributeType required} to VisitAttributeType
}
relationship OneToMany {
	Allergy{allergyReaction} to AllergyReaction{alergy} ,
	
	Cohort{cohortMember} to CohortMembership{cohort required},
	
	Encounter{encounterProvider} to EncounterProvider{encounter required},
	Encounter{note} to Note{encounter},
	Encounter{obs} to Obs{encounter},
	Encounter{orderGroup} to OrderGroup{encounter required},
	Encounter{order} to Orders{encounter required},
	
	Form{formField} to FormField{form required},
	Form{formResource} to FormResource{form required},
	FormField{formField } to FormField{formField},
	
	Location{childLocation} to Location{parentLocation},
	
	Note{note} to Note{note},
	
	OrderGroup{orderSet} to OrderSet{orderGroup},
	
	OrderSetMember{orderSet} to OrderSet{orderSetMember},
	
	Obs {groupMembers} to Obs{obsGroup},
	
	Person{personAddress} to PersonAddress{person},
	Person{personAttribute} to PersonAttribute{person required},
	Person{personName} to PersonName{person required},
	
	Program{programWorkflow} to ProgramWorkflow{program required},
	
	ProgramWorkflow{programWorkflowState} to ProgramWorkflowState{programWorkflow required},
	
	Provider{providerAttribute} to ProviderAttribute{provider required},
	
	Visit{encounters} to Encounter{visit},
	
	Visit{visitAttribute} to VisitAttribute{visit required} 
}

relationship ManyToMany {
	OrderType {conceptClasse} to ConceptClass{orderType},
	ConceptNameTag {conceptName required} to ConceptName{conceptNameTag required},
	ConceptNameTag {conceptProposal required} to ConceptProposal{conceptNameTag required},
	Location {locationTag required} to LocationTag{location required},
	Role {privilege} to Privilege{role},
	Role {user} to User{role},
	Role {parentRole} to Role{childRole}
}

filter *
paginate * with pagination
service all with serviceClass
